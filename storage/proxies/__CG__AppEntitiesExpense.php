<?php

namespace DoctrineProxies\__CG__\App\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Expense extends \App\Entities\Expense implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'title', 'category_id', 'description', 'amount', 'bill_date', 'payment_method', 'status', 'merchant', 'receipt_image', 'emp_id', 'actioned_by', 'is_expense', 'is_claim', 'created_at', 'updated_at', 'deletedAt'];
        }

        return ['__isInitialized__', 'id', 'title', 'category_id', 'description', 'amount', 'bill_date', 'payment_method', 'status', 'merchant', 'receipt_image', 'emp_id', 'actioned_by', 'is_expense', 'is_claim', 'created_at', 'updated_at', 'deletedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Expense $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getActionedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActionedBy', []);

        return parent::getActionedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setActionedBy($actioned_by): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActionedBy', [$actioned_by]);

        parent::setActionedBy($actioned_by);
    }

    /**
     * {@inheritDoc}
     */
    public function getisExpense()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getisExpense', []);

        return parent::getisExpense();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsExpense($is_expense): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsExpense', [$is_expense]);

        parent::setIsExpense($is_expense);
    }

    /**
     * {@inheritDoc}
     */
    public function getisClaim()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getisClaim', []);

        return parent::getisClaim();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsClaim($is_claim): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsClaim', [$is_claim]);

        parent::setIsClaim($is_claim);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategoryId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategoryId', []);

        return parent::getCategoryId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategoryId($category_id): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategoryId', [$category_id]);

        parent::setCategoryId($category_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAmount', []);

        return parent::getAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setAmount($amount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAmount', [$amount]);

        return parent::setAmount($amount);
    }

    /**
     * {@inheritDoc}
     */
    public function getBillDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBillDate', []);

        return parent::getBillDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setBillDate($bill_date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBillDate', [$bill_date]);

        return parent::setBillDate($bill_date);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentMethod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentMethod', []);

        return parent::getPaymentMethod();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaymentMethod($payment_method)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaymentMethod', [$payment_method]);

        return parent::setPaymentMethod($payment_method);
    }

    /**
     * {@inheritDoc}
     */
    public function getMerchant()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMerchant', []);

        return parent::getMerchant();
    }

    /**
     * {@inheritDoc}
     */
    public function setMerchant($merchant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMerchant', [$merchant]);

        return parent::setMerchant($merchant);
    }

    /**
     * {@inheritDoc}
     */
    public function getReceiptImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReceiptImage', []);

        return parent::getReceiptImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setReceiptImage($receipt_image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReceiptImage', [$receipt_image]);

        return parent::setReceiptImage($receipt_image);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmpId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmpId', []);

        return parent::getEmpId();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmpId($emp_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmpId', [$emp_id]);

        return parent::setEmpId($emp_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

}
