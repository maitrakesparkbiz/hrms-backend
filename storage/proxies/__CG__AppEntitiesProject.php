<?php

namespace DoctrineProxies\__CG__\App\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Project extends \App\Entities\Project implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'client_name', 'project_name', 'project_description', 'client_email', 'skype_contact', 'project_doc', 'created_by', 'assigned_to', 'status_flag', 'ba', 'jr_ba', 'conv_id', 'final_approved', 'created_at', 'updated_at', 'deletedAt'];
        }

        return ['__isInitialized__', 'id', 'client_name', 'project_name', 'project_description', 'client_email', 'skype_contact', 'project_doc', 'created_by', 'assigned_to', 'status_flag', 'ba', 'jr_ba', 'conv_id', 'final_approved', 'created_at', 'updated_at', 'deletedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Project $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getFinalApproved()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFinalApproved', []);

        return parent::getFinalApproved();
    }

    /**
     * {@inheritDoc}
     */
    public function setFinalApproved($final_approved): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFinalApproved', [$final_approved]);

        parent::setFinalApproved($final_approved);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getClientName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClientName', []);

        return parent::getClientName();
    }

    /**
     * {@inheritDoc}
     */
    public function setClientName($client_name): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClientName', [$client_name]);

        parent::setClientName($client_name);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectName', []);

        return parent::getProjectName();
    }

    /**
     * {@inheritDoc}
     */
    public function setProjectName($project_name): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProjectName', [$project_name]);

        parent::setProjectName($project_name);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectDescription', []);

        return parent::getProjectDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setProjectDescription($project_description): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProjectDescription', [$project_description]);

        parent::setProjectDescription($project_description);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectDoc()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectDoc', []);

        return parent::getProjectDoc();
    }

    /**
     * {@inheritDoc}
     */
    public function setProjectDoc($project_doc): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProjectDoc', [$project_doc]);

        parent::setProjectDoc($project_doc);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', []);

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy($created_by): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', [$created_by]);

        parent::setCreatedBy($created_by);
    }

    /**
     * {@inheritDoc}
     */
    public function getAssignedTo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssignedTo', []);

        return parent::getAssignedTo();
    }

    /**
     * {@inheritDoc}
     */
    public function setAssignedTo($assigned_to): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAssignedTo', [$assigned_to]);

        parent::setAssignedTo($assigned_to);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusFlag()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusFlag', []);

        return parent::getStatusFlag();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatusFlag($status_flag): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatusFlag', [$status_flag]);

        parent::setStatusFlag($status_flag);
    }

    /**
     * {@inheritDoc}
     */
    public function getClientEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClientEmail', []);

        return parent::getClientEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setClientEmail($client_email): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClientEmail', [$client_email]);

        parent::setClientEmail($client_email);
    }

    /**
     * {@inheritDoc}
     */
    public function getSkypeContact()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSkypeContact', []);

        return parent::getSkypeContact();
    }

    /**
     * {@inheritDoc}
     */
    public function setSkypeContact($skype_contact): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSkypeContact', [$skype_contact]);

        parent::setSkypeContact($skype_contact);
    }

}
