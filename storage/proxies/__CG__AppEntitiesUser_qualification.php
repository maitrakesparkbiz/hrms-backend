<?php

namespace DoctrineProxies\__CG__\App\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User_qualification extends \App\Entities\User_qualification implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'education_type', 'university_name', 'start_date', 'end_date', 'doc_copy', 'degree', 'details', 'user', 'created_at', 'updated_at', 'deletedAt'];
        }

        return ['__isInitialized__', 'id', 'education_type', 'university_name', 'start_date', 'end_date', 'doc_copy', 'degree', 'details', 'user', 'created_at', 'updated_at', 'deletedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User_qualification $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getDegree()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDegree', []);

        return parent::getDegree();
    }

    /**
     * {@inheritDoc}
     */
    public function setDegree($degree): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDegree', [$degree]);

        parent::setDegree($degree);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getEducation_type()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEducation_type', []);

        return parent::getEducation_type();
    }

    /**
     * {@inheritDoc}
     */
    public function getAccount_holder_name()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccount_holder_name', []);

        return parent::getAccount_holder_name();
    }

    /**
     * {@inheritDoc}
     */
    public function getUniversity_name()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUniversity_name', []);

        return parent::getUniversity_name();
    }

    /**
     * {@inheritDoc}
     */
    public function getDocCopy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDocCopy', []);

        return parent::getDocCopy();
    }

    /**
     * {@inheritDoc}
     */
    public function setDocCopy($doc_copy): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDocCopy', [$doc_copy]);

        parent::setDocCopy($doc_copy);
    }

    /**
     * {@inheritDoc}
     */
    public function getStart_date()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStart_date', []);

        return parent::getStart_date();
    }

    /**
     * {@inheritDoc}
     */
    public function getEnd_date()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnd_date', []);

        return parent::getEnd_date();
    }

    /**
     * {@inheritDoc}
     */
    public function getDetails()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDetails', []);

        return parent::getDetails();
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setEducation_type($education_type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEducation_type', [$education_type]);

        return parent::setEducation_type($education_type);
    }

    /**
     * {@inheritDoc}
     */
    public function setAccount_holder_name($account_holder_name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccount_holder_name', [$account_holder_name]);

        return parent::setAccount_holder_name($account_holder_name);
    }

    /**
     * {@inheritDoc}
     */
    public function setUniversity_name($university_name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUniversity_name', [$university_name]);

        return parent::setUniversity_name($university_name);
    }

    /**
     * {@inheritDoc}
     */
    public function setStart_date($start_date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStart_date', [$start_date]);

        return parent::setStart_date($start_date);
    }

    /**
     * {@inheritDoc}
     */
    public function setEnd_date($end_date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnd_date', [$end_date]);

        return parent::setEnd_date($end_date);
    }

    /**
     * {@inheritDoc}
     */
    public function setDetails($details)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDetails', [$details]);

        return parent::setDetails($details);
    }

    /**
     * {@inheritDoc}
     */
    public function setUser($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

}
