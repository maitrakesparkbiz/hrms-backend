<?php

namespace DoctrineProxies\__CG__\App\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class CheckIn extends \App\Entities\CheckIn implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'emp_id', 'check_in_time', 'check_out_time', 'check_out_emp_id', 'breaks', 'comments', 'check_in_ip', 'check_out_ip', 'is_late', 'late_minutes', 'created_at', 'updated_at', 'deletedAt'];
        }

        return ['__isInitialized__', 'id', 'emp_id', 'check_in_time', 'check_out_time', 'check_out_emp_id', 'breaks', 'comments', 'check_in_ip', 'check_out_ip', 'is_late', 'late_minutes', 'created_at', 'updated_at', 'deletedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (CheckIn $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getisLate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getisLate', []);

        return parent::getisLate();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsLate($is_late): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsLate', [$is_late]);

        parent::setIsLate($is_late);
    }

    /**
     * {@inheritDoc}
     */
    public function getLateMinutes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLateMinutes', []);

        return parent::getLateMinutes();
    }

    /**
     * {@inheritDoc}
     */
    public function setLateMinutes($late_minutes): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLateMinutes', [$late_minutes]);

        parent::setLateMinutes($late_minutes);
    }

    /**
     * {@inheritDoc}
     */
    public function getCheckInIp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCheckInIp', []);

        return parent::getCheckInIp();
    }

    /**
     * {@inheritDoc}
     */
    public function setCheckInIp($check_in_ip): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCheckInIp', [$check_in_ip]);

        parent::setCheckInIp($check_in_ip);
    }

    /**
     * {@inheritDoc}
     */
    public function getCheckOutIp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCheckOutIp', []);

        return parent::getCheckOutIp();
    }

    /**
     * {@inheritDoc}
     */
    public function setCheckOutIp($check_out_ip): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCheckOutIp', [$check_out_ip]);

        parent::setCheckOutIp($check_out_ip);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmpId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmpId', []);

        return parent::getEmpId();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmpId($emp_id): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmpId', [$emp_id]);

        parent::setEmpId($emp_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getCheckOutId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCheckOutId', []);

        return parent::getCheckOutId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCheckOutId($check_out_emp_id): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCheckOutId', [$check_out_emp_id]);

        parent::setCheckOutId($check_out_emp_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getCheckInTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCheckInTime', []);

        return parent::getCheckInTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setCheckInTime($check_in_time): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCheckInTime', [$check_in_time]);

        parent::setCheckInTime($check_in_time);
    }

    /**
     * {@inheritDoc}
     */
    public function getCheckOutTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCheckOutTime', []);

        return parent::getCheckOutTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setCheckOutTime($check_out_time): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCheckOutTime', [$check_out_time]);

        parent::setCheckOutTime($check_out_time);
    }

}
